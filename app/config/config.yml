imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true
    translator: { fallback: en }

# Twig Configuration
twig:
    cache: false
    debug:           "%kernel.debug%"
    strict_variables: "%kernel.debug%"
        
# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        []
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
        mappings:
              gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree 
                        is_bundle: false
                        
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            tree: true

                      
                        

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
#FOS conf
fos_user:
    db_driver: orm 
    firewall_name: main
    user_class: NRtworks\SubscriptionBundle\Entity\icousers
    
    
sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
            
            
jms_serializer:
  metadata:
    auto_detection: true
    directories:
      FOSUserBundle:
        namespace_prefix: "FOS\\UserBundle"
        path: "%kernel.root_dir%/Resources/serializer/FOS"
        
        
services:
   arrayFunctions:
     class: NRtworks\GlobalUtilsFunctionsBundle\Services\arrayFunctions
   arrayFunctionsTreeSaving:
     class: NRtworks\GlobalUtilsFunctionsBundle\Services\arrayFunctionsTreeSaving
   globalUtilsFunctions.objectsAndDBFunctions:
     class: NRtworks\GlobalUtilsFunctionsBundle\Services\objectsAndDBFunctions
     arguments: ['@doctrine.orm.entity_manager']
          
     #Model Services
    
    # this one is the service that returns objects of the business dimension, update an existing one etc     
   BusinessDimension.setUpForDimension:
     class: NRtworks\BusinessDimensionBundle\Model\setUpForDimension
     arguments: ['@doctrine.orm.entity_manager',@arrayFunctions]
     
    # this one is the API used to return result from the database gievn parameters
   GlobalUtilsFunctions.APIGetData:
     class: NRtworks\GlobalUtilsFunctionsBundle\Services\APIGetData
     arguments: ['@doctrine.orm.entity_manager']
     
 
     #Components
   TreeView.treeBuilder:
     class: NRtworks\TreeViewBundle\Model\treeBuilder
     arguments: ['@doctrine.orm.entity_manager',@arrayFunctions]
        